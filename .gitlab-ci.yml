image: ruby:3.1.2

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - ruby -v  # Print out ruby version for debugging
  # Uncomment next line if your rails app needs a JS runtime:
  - apt-get update -q && apt-get install nodejs -yqq
  - bundle config set --local deployment true  # Install dependencies into ./vendor/ruby
  - bundle install -j $(nproc)

stages:          # List of stages for jobs, and their order of execution
  - test

rspec:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - bundle exec rake db:setup RAILS_ENV=test
    - bundle exec rspec spec

rubocop:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - bundle exec rubocop



services:
  - postgres:latest
  - redis:latest
  - name: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    alias: elasticsearch

variables:
  POSTGRES_DB: lauber_backend_test
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: ""
  REDIS_HOST: redis
  REDIS_URL: redis://redis:6379
  ELASTICSEARCH_URL: "http://elasticsearch:9200"

before_script:
  - apt-get update -qq && apt-get install -y -qq nodejs libpq-dev cmake libicu-dev
  - echo "$RAILS_MASTER_KEY" -> config/master.key
  - RAILS_ENV=test bundle install --jobs $(nproc)  "${FLAGS[@]}"
  - cp config/database.yml.example config/database.yml
  - RAILS_ENV=test rails db:setup

rspec:
  script:
    - bundle exec rspec
